{"version":3,"sources":["spritz.min.js","node_modules/browser-pack/_prelude.js","node_modules/knot.js/dist/knot.min.js","node_modules/shortid/index.js","node_modules/shortid/lib/alphabet.js","node_modules/shortid/lib/decode.js","node_modules/shortid/lib/encode.js","node_modules/shortid/lib/index.js","node_modules/shortid/lib/is-valid.js","node_modules/shortid/lib/random/random-byte-browser.js","node_modules/shortid/lib/random/random-from-seed.js","node_modules/shortid/lib/util/cluster-worker-id-browser.js","src/spritz.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","Spritz","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length","1","Knot","Object","assign","arguments","prototype","hasOwnProperty","push","_once","splice","indexOf","Array","slice","forEach","apply","on","once","off","emit","2","./lib/index","3","reset","shuffled","setCharacters","_alphabet_","alphabet","ORIGINAL","unique","split","filter","item","ind","arr","lastIndexOf","join","characters","setSeed","seed","randomFromSeed","previousSeed","shuffle","characterIndex","sourceArray","targetArray","nextValue","Math","floor","getShuffled","lookup","index","alphabetShuffled","./random/random-from-seed","4","decode","id","version","substr","worker","./alphabet","5","encode","number","done","loopCounter","str","randomByte","pow","./random/random-byte","6","generate","seconds","Date","now","REDUCE_TIME","previousSeconds","counter","clusterWorkerId","seedValue","workerId","newCharacters","undefined","isValid","./decode","./encode","./is-valid","./util/cluster-worker-id","7","isShortId","len","8","crypto","getRandomValues","random","dest","Uint8Array","msCrypto","9","getNextValue","_seed_","10","11","_interopRequireDefault","obj","__esModule","default","defineProperty","value","_knot","_knot2","_shortid","_shortid2","_runSeries","functions","Promise","resolve","reject","func","_calculations","sprite","columns","ceil","settings","steps","rows","backgroundSize","width","round","toFixed","height","padding","_generateDOM","htmlNode","document","createElement","querySelector","container","appendChild","setAttribute","uniqid","_generateMask","_canUseSVG","mask","svgNode","svgMask","src","innerHTML","createElementNS","createSVGRect","_defaultStep","changeStep","initial","_generateCSS","styleNode","imageNode","spriteBehavior","spriteFallback","css","responsive","flip","proxy","createTextNode","head","_loadProxyImage","source","proxyImagesList","proxyImage","Image","onload","_nextStep","currentStep","_prevStep","_proxy","step","proxyNode","proxySrc","then","style","backgroundImage","getAttribute","classList","add","init","__init","instance","build","__build","destroy","parentNode","removeChild","proxyTimeout","load","isMaskingSupported","getCurrentStep","remove","stepZero","rowsZero","columnsZero","positionX","positionY","backgroundPosition","clearTimeout","setTimeout","changeProgress","progressValue","stepEquiv","animateStep","options","knot.js","shortid"],"mappings":"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","file":"spritz.min.js","sourcesContent":["(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.Spritz = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n/*!\n * Knot.js 1.1.0 - A browser-based event emitter, for tying things together.\n * Copyright (c) 2016 Michael Cavalea - https://github.com/callmecavs/knot.js\n * License: MIT\n */\n!function(n,e){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=e():\"function\"==typeof define&&define.amd?define(e):n.Knot=e()}(this,function(){\"use strict\";var n={};n[\"extends\"]=Object.assign||function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n};var e=function(){function e(n,e){return f[n]=f[n]||[],f[n].push(e),this}function t(n,t){return t._once=!0,e(n,t),this}function r(n){var e=arguments.length<=1||void 0===arguments[1]?!1:arguments[1];return e?f[n].splice(f[n].indexOf(e),1):delete f[n],this}function o(n){for(var e=this,t=arguments.length,o=Array(t>1?t-1:0),i=1;t>i;i++)o[i-1]=arguments[i];var u=f[n]&&f[n].slice();return u&&u.forEach(function(t){t._once&&r(n,t),t.apply(e,o)}),this}var i=arguments.length<=0||void 0===arguments[0]?{}:arguments[0],f={};return n[\"extends\"]({},i,{on:e,once:t,off:r,emit:o})};return e});\n},{}],2:[function(require,module,exports){\n'use strict';\nmodule.exports = require('./lib/index');\n\n},{\"./lib/index\":6}],3:[function(require,module,exports){\n'use strict';\n\nvar randomFromSeed = require('./random/random-from-seed');\n\nvar ORIGINAL = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_-';\nvar alphabet;\nvar previousSeed;\n\nvar shuffled;\n\nfunction reset() {\n    shuffled = false;\n}\n\nfunction setCharacters(_alphabet_) {\n    if (!_alphabet_) {\n        if (alphabet !== ORIGINAL) {\n            alphabet = ORIGINAL;\n            reset();\n        }\n        return;\n    }\n\n    if (_alphabet_ === alphabet) {\n        return;\n    }\n\n    if (_alphabet_.length !== ORIGINAL.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. You submitted ' + _alphabet_.length + ' characters: ' + _alphabet_);\n    }\n\n    var unique = _alphabet_.split('').filter(function(item, ind, arr){\n       return ind !== arr.lastIndexOf(item);\n    });\n\n    if (unique.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. These characters were not unique: ' + unique.join(', '));\n    }\n\n    alphabet = _alphabet_;\n    reset();\n}\n\nfunction characters(_alphabet_) {\n    setCharacters(_alphabet_);\n    return alphabet;\n}\n\nfunction setSeed(seed) {\n    randomFromSeed.seed(seed);\n    if (previousSeed !== seed) {\n        reset();\n        previousSeed = seed;\n    }\n}\n\nfunction shuffle() {\n    if (!alphabet) {\n        setCharacters(ORIGINAL);\n    }\n\n    var sourceArray = alphabet.split('');\n    var targetArray = [];\n    var r = randomFromSeed.nextValue();\n    var characterIndex;\n\n    while (sourceArray.length > 0) {\n        r = randomFromSeed.nextValue();\n        characterIndex = Math.floor(r * sourceArray.length);\n        targetArray.push(sourceArray.splice(characterIndex, 1)[0]);\n    }\n    return targetArray.join('');\n}\n\nfunction getShuffled() {\n    if (shuffled) {\n        return shuffled;\n    }\n    shuffled = shuffle();\n    return shuffled;\n}\n\n/**\n * lookup shuffled letter\n * @param index\n * @returns {string}\n */\nfunction lookup(index) {\n    var alphabetShuffled = getShuffled();\n    return alphabetShuffled[index];\n}\n\nmodule.exports = {\n    characters: characters,\n    seed: setSeed,\n    lookup: lookup,\n    shuffled: getShuffled\n};\n\n},{\"./random/random-from-seed\":9}],4:[function(require,module,exports){\n'use strict';\nvar alphabet = require('./alphabet');\n\n/**\n * Decode the id to get the version and worker\n * Mainly for debugging and testing.\n * @param id - the shortid-generated id.\n */\nfunction decode(id) {\n    var characters = alphabet.shuffled();\n    return {\n        version: characters.indexOf(id.substr(0, 1)) & 0x0f,\n        worker: characters.indexOf(id.substr(1, 1)) & 0x0f\n    };\n}\n\nmodule.exports = decode;\n\n},{\"./alphabet\":3}],5:[function(require,module,exports){\n'use strict';\n\nvar randomByte = require('./random/random-byte');\n\nfunction encode(lookup, number) {\n    var loopCounter = 0;\n    var done;\n\n    var str = '';\n\n    while (!done) {\n        str = str + lookup( ( (number >> (4 * loopCounter)) & 0x0f ) | randomByte() );\n        done = number < (Math.pow(16, loopCounter + 1 ) );\n        loopCounter++;\n    }\n    return str;\n}\n\nmodule.exports = encode;\n\n},{\"./random/random-byte\":8}],6:[function(require,module,exports){\n'use strict';\n\nvar alphabet = require('./alphabet');\nvar encode = require('./encode');\nvar decode = require('./decode');\nvar isValid = require('./is-valid');\n\n// Ignore all milliseconds before a certain time to reduce the size of the date entropy without sacrificing uniqueness.\n// This number should be updated every year or so to keep the generated id short.\n// To regenerate `new Date() - 0` and bump the version. Always bump the version!\nvar REDUCE_TIME = 1459707606518;\n\n// don't change unless we change the algos or REDUCE_TIME\n// must be an integer and less than 16\nvar version = 6;\n\n// if you are using cluster or multiple servers use this to make each instance\n// has a unique value for worker\n// Note: I don't know if this is automatically set when using third\n// party cluster solutions such as pm2.\nvar clusterWorkerId = require('./util/cluster-worker-id') || 0;\n\n// Counter is used when shortid is called multiple times in one second.\nvar counter;\n\n// Remember the last time shortid was called in case counter is needed.\nvar previousSeconds;\n\n/**\n * Generate unique id\n * Returns string id\n */\nfunction generate() {\n\n    var str = '';\n\n    var seconds = Math.floor((Date.now() - REDUCE_TIME) * 0.001);\n\n    if (seconds === previousSeconds) {\n        counter++;\n    } else {\n        counter = 0;\n        previousSeconds = seconds;\n    }\n\n    str = str + encode(alphabet.lookup, version);\n    str = str + encode(alphabet.lookup, clusterWorkerId);\n    if (counter > 0) {\n        str = str + encode(alphabet.lookup, counter);\n    }\n    str = str + encode(alphabet.lookup, seconds);\n\n    return str;\n}\n\n\n/**\n * Set the seed.\n * Highly recommended if you don't want people to try to figure out your id schema.\n * exposed as shortid.seed(int)\n * @param seed Integer value to seed the random alphabet.  ALWAYS USE THE SAME SEED or you might get overlaps.\n */\nfunction seed(seedValue) {\n    alphabet.seed(seedValue);\n    return module.exports;\n}\n\n/**\n * Set the cluster worker or machine id\n * exposed as shortid.worker(int)\n * @param workerId worker must be positive integer.  Number less than 16 is recommended.\n * returns shortid module so it can be chained.\n */\nfunction worker(workerId) {\n    clusterWorkerId = workerId;\n    return module.exports;\n}\n\n/**\n *\n * sets new characters to use in the alphabet\n * returns the shuffled alphabet\n */\nfunction characters(newCharacters) {\n    if (newCharacters !== undefined) {\n        alphabet.characters(newCharacters);\n    }\n\n    return alphabet.shuffled();\n}\n\n\n// Export all other functions as properties of the generate function\nmodule.exports = generate;\nmodule.exports.generate = generate;\nmodule.exports.seed = seed;\nmodule.exports.worker = worker;\nmodule.exports.characters = characters;\nmodule.exports.decode = decode;\nmodule.exports.isValid = isValid;\n\n},{\"./alphabet\":3,\"./decode\":4,\"./encode\":5,\"./is-valid\":7,\"./util/cluster-worker-id\":10}],7:[function(require,module,exports){\n'use strict';\nvar alphabet = require('./alphabet');\n\nfunction isShortId(id) {\n    if (!id || typeof id !== 'string' || id.length < 6 ) {\n        return false;\n    }\n\n    var characters = alphabet.characters();\n    var len = id.length;\n    for(var i = 0; i < len;i++) {\n        if (characters.indexOf(id[i]) === -1) {\n            return false;\n        }\n    }\n    return true;\n}\n\nmodule.exports = isShortId;\n\n},{\"./alphabet\":3}],8:[function(require,module,exports){\n'use strict';\n\nvar crypto = typeof window === 'object' && (window.crypto || window.msCrypto); // IE 11 uses window.msCrypto\n\nfunction randomByte() {\n    if (!crypto || !crypto.getRandomValues) {\n        return Math.floor(Math.random() * 256) & 0x30;\n    }\n    var dest = new Uint8Array(1);\n    crypto.getRandomValues(dest);\n    return dest[0] & 0x30;\n}\n\nmodule.exports = randomByte;\n\n},{}],9:[function(require,module,exports){\n'use strict';\n\n// Found this seed-based random generator somewhere\n// Based on The Central Randomizer 1.3 (C) 1997 by Paul Houle (houle@msc.cornell.edu)\n\nvar seed = 1;\n\n/**\n * return a random number based on a seed\n * @param seed\n * @returns {number}\n */\nfunction getNextValue() {\n    seed = (seed * 9301 + 49297) % 233280;\n    return seed/(233280.0);\n}\n\nfunction setSeed(_seed_) {\n    seed = _seed_;\n}\n\nmodule.exports = {\n    nextValue: getNextValue,\n    seed: setSeed\n};\n\n},{}],10:[function(require,module,exports){\n'use strict';\n\nmodule.exports = 0;\n\n},{}],11:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _knot = require('knot.js');\n\nvar _knot2 = _interopRequireDefault(_knot);\n\nvar _shortid = require('shortid');\n\nvar _shortid2 = _interopRequireDefault(_shortid);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = function () {\n    var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\n    /**\n    * Default settings\n    */\n\n    var settings = {\n        container: options.container || 'body',\n\n        steps: options.steps,\n        initial: options.initial || 1,\n\n        rows: options.rows || 1,\n        width: options.width,\n        height: options.height,\n\n        flip: options.flip || false,\n        responsive: options.responsive || false,\n\n        src: options.src,\n        mask: options.mask || false,\n        proxy: options.proxy || false\n    };\n\n    /**\n    * Useful constants\n    */\n\n    // const windowsHeight = window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight\n    var uniqid = _shortid2.default.generate();\n\n    /**\n    * Local variables\n    */\n\n    var imageNode = null;\n    var styleNode = null;\n    var htmlNode = null;\n    var svgNode = null;\n    var proxyNode = null;\n    var proxyImagesList = [];\n    var proxyTimeout = null;\n    var backgroundSize = null;\n    var sprite = {\n        columns: null,\n        padding: null,\n        width: null,\n        height: null\n    };\n    var currentStep = null;\n\n    /**\n    * Series of functions\n    */\n\n    var __build = [_calculations, _generateDOM, _generateMask, _generateCSS, _defaultStep];\n\n    var __init = [load, build];\n\n    /**\n    * Expose public methods\n    * https://github.com/callmecavs/knot.js\n    */\n\n    var instance = (0, _knot2.default)({\n        init: init,\n        load: load,\n        build: build,\n        destroy: destroy,\n        changeStep: changeStep,\n        changeProgress: changeProgress,\n        animateStep: animateStep,\n        getCurrentStep: getCurrentStep,\n        isMaskingSupported: isMaskingSupported\n    });\n\n    return instance;\n\n    /**\n    * Private methods\n    */\n\n    // Run a serie of functions\n    function _runSeries(functions) {\n        return new Promise(function (resolve, reject) {\n            resolve(functions.forEach(function (func) {\n                return func();\n            }));\n        });\n    }\n\n    // Sprite calculations\n    function _calculations() {\n        // how many columns ?\n        sprite.columns = Math.ceil(settings.steps / settings.rows);\n\n        // what's background sizes\n        backgroundSize = 100 * sprite.columns;\n\n        // fixed width calculation\n        sprite.width = settings.width / sprite.columns;\n        sprite.width = (Math.round(sprite.width * 1000 / 10) / 100).toFixed(2);\n\n        // fixed height calculation\n        sprite.height = settings.height / settings.rows;\n        sprite.height = (Math.round(sprite.height * 1000 / 10) / 100).toFixed(2);\n\n        // sprite padding used for responsive\n        sprite.padding = sprite.height * 100 * 100 / (sprite.width * 100);\n    }\n\n    // Generate the DOM\n    function _generateDOM() {\n        if (htmlNode === null) {\n            htmlNode = document.createElement('div');\n            document.querySelector(settings.container).appendChild(htmlNode).setAttribute('id', 'spritz-' + uniqid + '');\n        }\n    }\n\n    // Generate the JPG/PNG mask using SVG\n    function _generateMask() {\n        if (_canUseSVG() && settings.mask !== false && svgNode === null) {\n            var svgMask = '\\n            <svg id=\"spritz-svg-' + uniqid + '\" preserveAspectRatio=\"xMinYMin\" width=\"100%\" height=\"100%\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" viewBox=\"0 0 ' + sprite.width + ' ' + sprite.height + '\">\\n                <defs>\\n                    <mask id=\"spritzTopMask\">\\n                        <image width=\"' + settings.width + '\" height=\"' + settings.height + '\" xlink:href=\"' + settings.mask + '\"></image>\\n                    </mask>\\n                </defs>\\n                <image mask=\"url(#spritzTopMask)\" id=\"spritzTop\" width=\"' + settings.width + '\" height=\"' + settings.height + '\" xlink:href=\"' + settings.src + '\"></image>\\n            </svg>\\n            ';\n\n            document.querySelector('#spritz-' + uniqid + '').innerHTML = svgMask;\n\n            svgNode = document.querySelector('#spritz-svg-' + uniqid + '');\n        }\n    }\n\n    // Return true if SVG Mask can be used by the browser\n    function _canUseSVG() {\n        // Return true if SVG support enabled (work for IE8+)\n        return !!(document.createElementNS && document.createElementNS('http://www.w3.org/2000/svg', 'svg').createSVGRect);\n    }\n\n    // Set default step\n    function _defaultStep() {\n        changeStep(settings.initial);\n    }\n\n    // Generate the CSS\n    function _generateCSS() {\n        if (styleNode === null && imageNode != null) {\n            var spriteBehavior = '';\n            var spriteFallback = '';\n            var css = '';\n\n            // if responsive option, width = 100% & height = proportional\n            if (settings.responsive === true) {\n                spriteBehavior += '\\n                position: relative;\\n                width: 100%;\\n                ';\n                css += '\\n                #spritz-' + uniqid + '::after {\\n                    content: \\'\\';\\n                    display: block;\\n                    padding-bottom: ' + sprite.padding + '%;\\n                }\\n                ';\n                // fixed sizes\n            } else {\n                    spriteBehavior += '\\n                position: absolute;\\n                width: ' + sprite.width + 'px;\\n                height: ' + sprite.height + 'px;\\n                ';\n                }\n\n            // If flip sprite\n            if (settings.flip === true) {\n                spriteBehavior += '\\n                -webkit-transform: scaleX(-1);\\n                -moz-transform: scaleX(-1);\\n                -ms-transform: scaleX(-1);\\n                -o-transform: scaleX(-1);\\n                transform: scaleX(-1);\\n                filter: FlipH;\\n                -ms-filter: \\'FlipH\\';\\n                ';\n            }\n\n            // if SVG is not supported we display the CSS background fallback\n            if (svgNode === null) {\n                spriteFallback += '\\n                background: url(\\'' + imageNode.src + '\\') no-repeat 0 0%;\\n                background-size: ' + backgroundSize + '%;\\n                background-position: 0 0;\\n                ';\n            }\n\n            // if there is proxy images\n            if (settings.proxy !== false) {\n                css += '\\n                #spritz-proxy-' + uniqid + ' {\\n                    position: absolute;\\n                    left: 0;\\n                    top: 0;\\n                    width: 100%;\\n                    height: 100%;\\n                    opacity: 0;\\n                    background-repeat: no-repeat;\\n                    background-size: 100%;\\n                    background-position: 0 0;\\n                }\\n\\n                #spritz-' + uniqid + '.proxy-visible #spritz-svg-' + uniqid + ' {\\n                    transition: opacity 0s linear .4s;\\n                    opacity: 0;\\n                }\\n\\n                #spritz-' + uniqid + '.proxy-visible #spritz-proxy-' + uniqid + ' {\\n                    transition: opacity .4s linear;\\n                    opacity: 1;\\n                }\\n                ';\n            }\n\n            // generate the css\n            css += '\\n            #spritz-' + uniqid + ' {\\n                left: 50%;\\n                top: 50%;\\n                -webkit-transform: translate(-50%, -50%);\\n                -moz-transform: translate(-50%, -50%);\\n                -ms-transform: translate(-50%, -50%);\\n                -o-transform: translate(-50%, -50%);\\n                transform: translate(-50%, -50%);\\n                overflow: hidden;\\n                ' + spriteFallback + '\\n                ' + spriteBehavior + '\\n            }\\n            ';\n\n            // create style node\n            styleNode = document.createElement('style');\n            styleNode.innerHTML = css;\n            styleNode.appendChild(document.createTextNode('')); // WebKit hack\n\n            // append style element to the head\n            document.head.appendChild(styleNode);\n        }\n    }\n\n    // Load and cache the\n    function _loadProxyImage(source) {\n        return new Promise(function (resolve, reject) {\n            if (typeof proxyImagesList[source] === 'undefined') {\n                (function () {\n                    var proxyImage = new Image();\n                    proxyImage.onload = function () {\n                        proxyImagesList[source] = proxyImage;\n                        resolve(proxyImagesList[source]);\n                    };\n                    proxyImage.src = source;\n                })();\n            } else {\n                resolve(proxyImagesList[source]);\n            }\n        });\n    }\n\n    // Return the following step\n    function _nextStep() {\n        return currentStep < settings.steps ? currentStep + 1 : 1;\n    }\n\n    // Return the previous step\n    function _prevStep() {\n        return currentStep > 1 ? currentStep - 1 : settings.steps;\n    }\n\n    // Replace the current step by it's HD replacement, only if it exists\n    function _proxy(step) {\n        // Check if the proxy frame has been set by the user\n        if (typeof settings.proxy[step] === 'undefined') {\n            return;\n        }\n\n        // If the proxy dom element doesn't exist, we create it !\n        if (proxyNode === null) {\n            proxyNode = document.createElement('div');\n            htmlNode.appendChild(proxyNode).setAttribute('id', 'spritz-proxy-' + uniqid + '');\n        }\n\n        // If the proxy dom element, we can load the proxy image\n        if (proxyNode !== null) {\n            var proxySrc = settings.proxy[step];\n            _loadProxyImage(proxySrc).then(function (proxyImage) {\n                proxyNode.style.backgroundImage = 'url(\"' + proxyImage.getAttribute('src') + '\")';\n                htmlNode.classList.add('proxy-visible');\n            });\n        }\n    }\n\n    /**\n    * Public methods\n    */\n\n    // Initiate the instance\n    function init() {\n        var initial = arguments.length <= 0 || arguments[0] === undefined ? null : arguments[0];\n\n        if (initial !== null) settings.initial = initial;\n        _runSeries(__init).then(function () {\n            return instance.emit('init');\n        });\n    }\n\n    // Create the sprite structure\n    function build() {\n        _runSeries(__build).then(function () {\n            return instance.emit('build');\n        });\n    }\n\n    // Destroy completely the sprite and restore initial state\n    function destroy() {\n        styleNode.parentNode.removeChild(styleNode);\n        htmlNode.parentNode.removeChild(htmlNode);\n\n        imageNode = styleNode = htmlNode = svgNode = proxyNode = proxyTimeout = null;\n        proxyImagesList = [];\n\n        return instance.emit('destroy');\n    }\n\n    // Load the sprite image\n    function load() {\n        if (imageNode === null) {\n            imageNode = new Image();\n            imageNode.onload = function () {\n                return instance.emit('load');\n            };\n            imageNode.src = settings.src;\n        }\n    }\n\n    // Return true if SVG Masking is supported\n    function isMaskingSupported() {\n        return _canUseSVG;\n    }\n\n    // Return the current frame/step\n    function getCurrentStep() {\n        return currentStep;\n    }\n\n    // Change the current frame/step (no animation)\n    function changeStep() {\n        var step = arguments.length <= 0 || arguments[0] === undefined ? 1 : arguments[0];\n\n        if (styleNode != null && htmlNode != null && imageNode != null) {\n            // If next step\n            if (step === 'next') {\n                step = _nextStep();\n            }\n\n            // If prev step\n            if (step === 'prev') {\n                step = _prevStep();\n            }\n\n            // Hide the proxy\n            htmlNode.classList.remove('proxy-visible');\n\n            // Step & rows values, starting from 0\n            var stepZero = step - 1;\n            var rowsZero = settings.rows - 1;\n            var columnsZero = sprite.columns - 1;\n\n            // Calculate the new position\n            var positionX = 100 / columnsZero * (stepZero % sprite.columns);\n            var positionY = 100 / rowsZero * Math.floor(stepZero / sprite.columns);\n\n            // Set the new sprite position\n            if (svgNode !== null) {\n                positionX = positionX * columnsZero / 100 * sprite.width;\n                positionY = positionY * rowsZero / 100 * sprite.height;\n                svgNode.setAttribute('viewBox', '' + positionX + ' ' + positionY + ' ' + sprite.width + ' ' + sprite.height + ' ');\n            } else {\n                htmlNode.style.backgroundPosition = '' + positionX + '% ' + positionY + '%';\n            }\n\n            // Save current step\n            currentStep = step;\n\n            // Fire proxy replacement after a certain time on a frame\n            clearTimeout(proxyTimeout);\n            proxyTimeout = setTimeout(function () {\n                _proxy(step);\n            }, 500);\n\n            // Emit changed\n            return instance.emit('change');\n        }\n    }\n\n    // Set a progress value: 0 = first step / 1 = last step\n    function changeProgress(progressValue) {\n        var stepEquiv = Math.round(progressValue * 100 * settings.steps / 100);\n        if (stepEquiv === 0) stepEquiv++;\n        return changeStep(stepEquiv);\n    }\n\n    // Update current frame/step (animated)\n    function animateStep(step) {\n        // TODO\n\n        var fps = arguments.length <= 1 || arguments[1] === undefined ? 12 : arguments[1];\n        var easing = arguments.length <= 2 || arguments[2] === undefined ? 'ease' : arguments[2];\n    }\n};\n\nmodule.exports = exports['default'];\n\n},{\"knot.js\":1,\"shortid\":2}]},{},[11])(11)\n});\n\n","(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/*!\n * Knot.js 1.1.0 - A browser-based event emitter, for tying things together.\n * Copyright (c) 2016 Michael Cavalea - https://github.com/callmecavs/knot.js\n * License: MIT\n */\n!function(n,e){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=e():\"function\"==typeof define&&define.amd?define(e):n.Knot=e()}(this,function(){\"use strict\";var n={};n[\"extends\"]=Object.assign||function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n};var e=function(){function e(n,e){return f[n]=f[n]||[],f[n].push(e),this}function t(n,t){return t._once=!0,e(n,t),this}function r(n){var e=arguments.length<=1||void 0===arguments[1]?!1:arguments[1];return e?f[n].splice(f[n].indexOf(e),1):delete f[n],this}function o(n){for(var e=this,t=arguments.length,o=Array(t>1?t-1:0),i=1;t>i;i++)o[i-1]=arguments[i];var u=f[n]&&f[n].slice();return u&&u.forEach(function(t){t._once&&r(n,t),t.apply(e,o)}),this}var i=arguments.length<=0||void 0===arguments[0]?{}:arguments[0],f={};return n[\"extends\"]({},i,{on:e,once:t,off:r,emit:o})};return e});","'use strict';\nmodule.exports = require('./lib/index');\n","'use strict';\n\nvar randomFromSeed = require('./random/random-from-seed');\n\nvar ORIGINAL = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_-';\nvar alphabet;\nvar previousSeed;\n\nvar shuffled;\n\nfunction reset() {\n    shuffled = false;\n}\n\nfunction setCharacters(_alphabet_) {\n    if (!_alphabet_) {\n        if (alphabet !== ORIGINAL) {\n            alphabet = ORIGINAL;\n            reset();\n        }\n        return;\n    }\n\n    if (_alphabet_ === alphabet) {\n        return;\n    }\n\n    if (_alphabet_.length !== ORIGINAL.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. You submitted ' + _alphabet_.length + ' characters: ' + _alphabet_);\n    }\n\n    var unique = _alphabet_.split('').filter(function(item, ind, arr){\n       return ind !== arr.lastIndexOf(item);\n    });\n\n    if (unique.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. These characters were not unique: ' + unique.join(', '));\n    }\n\n    alphabet = _alphabet_;\n    reset();\n}\n\nfunction characters(_alphabet_) {\n    setCharacters(_alphabet_);\n    return alphabet;\n}\n\nfunction setSeed(seed) {\n    randomFromSeed.seed(seed);\n    if (previousSeed !== seed) {\n        reset();\n        previousSeed = seed;\n    }\n}\n\nfunction shuffle() {\n    if (!alphabet) {\n        setCharacters(ORIGINAL);\n    }\n\n    var sourceArray = alphabet.split('');\n    var targetArray = [];\n    var r = randomFromSeed.nextValue();\n    var characterIndex;\n\n    while (sourceArray.length > 0) {\n        r = randomFromSeed.nextValue();\n        characterIndex = Math.floor(r * sourceArray.length);\n        targetArray.push(sourceArray.splice(characterIndex, 1)[0]);\n    }\n    return targetArray.join('');\n}\n\nfunction getShuffled() {\n    if (shuffled) {\n        return shuffled;\n    }\n    shuffled = shuffle();\n    return shuffled;\n}\n\n/**\n * lookup shuffled letter\n * @param index\n * @returns {string}\n */\nfunction lookup(index) {\n    var alphabetShuffled = getShuffled();\n    return alphabetShuffled[index];\n}\n\nmodule.exports = {\n    characters: characters,\n    seed: setSeed,\n    lookup: lookup,\n    shuffled: getShuffled\n};\n","'use strict';\nvar alphabet = require('./alphabet');\n\n/**\n * Decode the id to get the version and worker\n * Mainly for debugging and testing.\n * @param id - the shortid-generated id.\n */\nfunction decode(id) {\n    var characters = alphabet.shuffled();\n    return {\n        version: characters.indexOf(id.substr(0, 1)) & 0x0f,\n        worker: characters.indexOf(id.substr(1, 1)) & 0x0f\n    };\n}\n\nmodule.exports = decode;\n","'use strict';\n\nvar randomByte = require('./random/random-byte');\n\nfunction encode(lookup, number) {\n    var loopCounter = 0;\n    var done;\n\n    var str = '';\n\n    while (!done) {\n        str = str + lookup( ( (number >> (4 * loopCounter)) & 0x0f ) | randomByte() );\n        done = number < (Math.pow(16, loopCounter + 1 ) );\n        loopCounter++;\n    }\n    return str;\n}\n\nmodule.exports = encode;\n","'use strict';\n\nvar alphabet = require('./alphabet');\nvar encode = require('./encode');\nvar decode = require('./decode');\nvar isValid = require('./is-valid');\n\n// Ignore all milliseconds before a certain time to reduce the size of the date entropy without sacrificing uniqueness.\n// This number should be updated every year or so to keep the generated id short.\n// To regenerate `new Date() - 0` and bump the version. Always bump the version!\nvar REDUCE_TIME = 1459707606518;\n\n// don't change unless we change the algos or REDUCE_TIME\n// must be an integer and less than 16\nvar version = 6;\n\n// if you are using cluster or multiple servers use this to make each instance\n// has a unique value for worker\n// Note: I don't know if this is automatically set when using third\n// party cluster solutions such as pm2.\nvar clusterWorkerId = require('./util/cluster-worker-id') || 0;\n\n// Counter is used when shortid is called multiple times in one second.\nvar counter;\n\n// Remember the last time shortid was called in case counter is needed.\nvar previousSeconds;\n\n/**\n * Generate unique id\n * Returns string id\n */\nfunction generate() {\n\n    var str = '';\n\n    var seconds = Math.floor((Date.now() - REDUCE_TIME) * 0.001);\n\n    if (seconds === previousSeconds) {\n        counter++;\n    } else {\n        counter = 0;\n        previousSeconds = seconds;\n    }\n\n    str = str + encode(alphabet.lookup, version);\n    str = str + encode(alphabet.lookup, clusterWorkerId);\n    if (counter > 0) {\n        str = str + encode(alphabet.lookup, counter);\n    }\n    str = str + encode(alphabet.lookup, seconds);\n\n    return str;\n}\n\n\n/**\n * Set the seed.\n * Highly recommended if you don't want people to try to figure out your id schema.\n * exposed as shortid.seed(int)\n * @param seed Integer value to seed the random alphabet.  ALWAYS USE THE SAME SEED or you might get overlaps.\n */\nfunction seed(seedValue) {\n    alphabet.seed(seedValue);\n    return module.exports;\n}\n\n/**\n * Set the cluster worker or machine id\n * exposed as shortid.worker(int)\n * @param workerId worker must be positive integer.  Number less than 16 is recommended.\n * returns shortid module so it can be chained.\n */\nfunction worker(workerId) {\n    clusterWorkerId = workerId;\n    return module.exports;\n}\n\n/**\n *\n * sets new characters to use in the alphabet\n * returns the shuffled alphabet\n */\nfunction characters(newCharacters) {\n    if (newCharacters !== undefined) {\n        alphabet.characters(newCharacters);\n    }\n\n    return alphabet.shuffled();\n}\n\n\n// Export all other functions as properties of the generate function\nmodule.exports = generate;\nmodule.exports.generate = generate;\nmodule.exports.seed = seed;\nmodule.exports.worker = worker;\nmodule.exports.characters = characters;\nmodule.exports.decode = decode;\nmodule.exports.isValid = isValid;\n","'use strict';\nvar alphabet = require('./alphabet');\n\nfunction isShortId(id) {\n    if (!id || typeof id !== 'string' || id.length < 6 ) {\n        return false;\n    }\n\n    var characters = alphabet.characters();\n    var len = id.length;\n    for(var i = 0; i < len;i++) {\n        if (characters.indexOf(id[i]) === -1) {\n            return false;\n        }\n    }\n    return true;\n}\n\nmodule.exports = isShortId;\n","'use strict';\n\nvar crypto = typeof window === 'object' && (window.crypto || window.msCrypto); // IE 11 uses window.msCrypto\n\nfunction randomByte() {\n    if (!crypto || !crypto.getRandomValues) {\n        return Math.floor(Math.random() * 256) & 0x30;\n    }\n    var dest = new Uint8Array(1);\n    crypto.getRandomValues(dest);\n    return dest[0] & 0x30;\n}\n\nmodule.exports = randomByte;\n","'use strict';\n\n// Found this seed-based random generator somewhere\n// Based on The Central Randomizer 1.3 (C) 1997 by Paul Houle (houle@msc.cornell.edu)\n\nvar seed = 1;\n\n/**\n * return a random number based on a seed\n * @param seed\n * @returns {number}\n */\nfunction getNextValue() {\n    seed = (seed * 9301 + 49297) % 233280;\n    return seed/(233280.0);\n}\n\nfunction setSeed(_seed_) {\n    seed = _seed_;\n}\n\nmodule.exports = {\n    nextValue: getNextValue,\n    seed: setSeed\n};\n","'use strict';\n\nmodule.exports = 0;\n","import knot from 'knot.js'\nimport shortid from 'shortid'\n\n\nexport default (options = {}) => {\n    /**\n    * Default settings\n    */\n\n    const settings = {\n        container: options.container || 'body',\n\n        steps: options.steps,\n        initial: options.initial || 1,\n\n        rows: options.rows || 1,\n        width: options.width,\n        height: options.height,\n\n        flip: options.flip || false,\n        responsive: options.responsive || false,\n\n        src: options.src,\n        mask: options.mask || false,\n        proxy: options.proxy || false\n    }\n\n\n    /**\n    * Useful constants\n    */\n\n    // const windowsHeight = window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight\n    const uniqid = shortid.generate()\n\n\n    /**\n    * Local variables\n    */\n\n    let imageNode = null\n    let styleNode = null\n    let htmlNode = null\n    let svgNode = null\n    let proxyNode = null\n    let proxyImagesList = []\n    let proxyTimeout = null\n    let backgroundSize = null\n    let sprite = {\n        columns: null,\n        padding: null,\n        width: null,\n        height: null\n    }\n    let currentStep = null\n\n\n    /**\n    * Series of functions\n    */\n\n    const __build = [\n        _calculations,\n        _generateDOM,\n        _generateMask,\n        _generateCSS,\n        _defaultStep\n    ]\n\n    const __init = [\n        load,\n        build\n    ]\n\n\n    /**\n    * Expose public methods\n    * https://github.com/callmecavs/knot.js\n    */\n\n    const instance = knot({\n        init: init,\n        load: load,\n        build: build,\n        destroy: destroy,\n        changeStep: changeStep,\n        changeProgress: changeProgress,\n        animateStep: animateStep,\n        getCurrentStep: getCurrentStep,\n        isMaskingSupported: isMaskingSupported\n    })\n\n    return instance\n\n\n    /**\n    * Private methods\n    */\n\n    // Run a serie of functions\n    function _runSeries (functions) {\n        return new Promise(function (resolve, reject) {\n            resolve(functions.forEach(func => func()))\n        })\n    }\n\n    // Sprite calculations\n    function _calculations () {\n        // how many columns ?\n        sprite.columns = Math.ceil(settings.steps / settings.rows)\n\n        // what's background sizes\n        backgroundSize = 100 * sprite.columns\n\n        // fixed width calculation\n        sprite.width = settings.width / sprite.columns\n        sprite.width = (Math.round((sprite.width * 1000) / 10) / 100).toFixed(2)\n\n        // fixed height calculation\n        sprite.height = settings.height / settings.rows\n        sprite.height = (Math.round((sprite.height * 1000) / 10) / 100).toFixed(2)\n\n        // sprite padding used for responsive\n        sprite.padding = ((sprite.height * 100) * 100 / (sprite.width * 100))\n    }\n\n    // Generate the DOM\n    function _generateDOM () {\n        if (htmlNode === null) {\n            htmlNode = document.createElement('div')\n            document\n                .querySelector(settings.container)\n                .appendChild(htmlNode)\n                .setAttribute('id', 'spritz-' + uniqid + '')\n        }\n    }\n\n    // Generate the JPG/PNG mask using SVG\n    function _generateMask () {\n        if (_canUseSVG() && settings.mask !== false && svgNode === null) {\n            let svgMask =\n            `\n            <svg id=\"spritz-svg-${uniqid}\" preserveAspectRatio=\"xMinYMin\" width=\"100%\" height=\"100%\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" viewBox=\"0 0 ${sprite.width} ${sprite.height}\">\n                <defs>\n                    <mask id=\"spritzTopMask\">\n                        <image width=\"${settings.width}\" height=\"${settings.height}\" xlink:href=\"${settings.mask}\"></image>\n                    </mask>\n                </defs>\n                <image mask=\"url(#spritzTopMask)\" id=\"spritzTop\" width=\"${settings.width}\" height=\"${settings.height}\" xlink:href=\"${settings.src}\"></image>\n            </svg>\n            `\n\n            document\n                .querySelector('#spritz-' + uniqid + '')\n                .innerHTML = svgMask\n\n            svgNode = document.querySelector('#spritz-svg-' + uniqid + '')\n        }\n    }\n\n    // Return true if SVG Mask can be used by the browser\n    function _canUseSVG () {\n        // Return true if SVG support enabled (work for IE8+)\n        return !!(document.createElementNS && document.createElementNS('http://www.w3.org/2000/svg', 'svg').createSVGRect)\n    }\n\n    // Set default step\n    function _defaultStep () {\n        changeStep(settings.initial)\n    }\n\n    // Generate the CSS\n    function _generateCSS () {\n        if (styleNode === null && imageNode != null) {\n            let spriteBehavior = ''\n            let spriteFallback = ''\n            let css = ''\n\n            // if responsive option, width = 100% & height = proportional\n            if (settings.responsive === true) {\n                spriteBehavior +=\n                `\n                position: relative;\n                width: 100%;\n                `\n                css +=\n                `\n                #spritz-${uniqid}::after {\n                    content: '';\n                    display: block;\n                    padding-bottom: ${sprite.padding}%;\n                }\n                `\n                // fixed sizes\n            } else {\n                spriteBehavior +=\n                `\n                position: absolute;\n                width: ${sprite.width}px;\n                height: ${sprite.height}px;\n                `\n            }\n\n            // If flip sprite\n            if (settings.flip === true) {\n                spriteBehavior +=\n                `\n                -webkit-transform: scaleX(-1);\n                -moz-transform: scaleX(-1);\n                -ms-transform: scaleX(-1);\n                -o-transform: scaleX(-1);\n                transform: scaleX(-1);\n                filter: FlipH;\n                -ms-filter: 'FlipH';\n                `\n            }\n\n            // if SVG is not supported we display the CSS background fallback\n            if (svgNode === null) {\n                spriteFallback +=\n                `\n                background: url('${imageNode.src}') no-repeat 0 0%;\n                background-size: ${backgroundSize}%;\n                background-position: 0 0;\n                `\n            }\n\n            // if there is proxy images\n            if (settings.proxy !== false) {\n                css +=\n                `\n                #spritz-proxy-${uniqid} {\n                    position: absolute;\n                    left: 0;\n                    top: 0;\n                    width: 100%;\n                    height: 100%;\n                    opacity: 0;\n                    background-repeat: no-repeat;\n                    background-size: 100%;\n                    background-position: 0 0;\n                }\n\n                #spritz-${uniqid}.proxy-visible #spritz-svg-${uniqid} {\n                    transition: opacity 0s linear .4s;\n                    opacity: 0;\n                }\n\n                #spritz-${uniqid}.proxy-visible #spritz-proxy-${uniqid} {\n                    transition: opacity .4s linear;\n                    opacity: 1;\n                }\n                `\n            }\n\n            // generate the css\n            css +=\n            `\n            #spritz-${uniqid} {\n                left: 50%;\n                top: 50%;\n                -webkit-transform: translate(-50%, -50%);\n                -moz-transform: translate(-50%, -50%);\n                -ms-transform: translate(-50%, -50%);\n                -o-transform: translate(-50%, -50%);\n                transform: translate(-50%, -50%);\n                overflow: hidden;\n                ${spriteFallback}\n                ${spriteBehavior}\n            }\n            `\n\n            // create style node\n            styleNode = document.createElement('style')\n            styleNode.innerHTML = css\n            styleNode.appendChild(document.createTextNode('')) // WebKit hack\n\n            // append style element to the head\n            document.head.appendChild(styleNode)\n        }\n    }\n\n    // Load and cache the\n    function _loadProxyImage (source) {\n        return new Promise(function (resolve, reject) {\n            if (typeof proxyImagesList[source] === 'undefined') {\n                let proxyImage = new Image()\n                proxyImage.onload = function () {\n                    proxyImagesList[source] = proxyImage\n                    resolve(proxyImagesList[source])\n                }\n                proxyImage.src = source\n            } else {\n                resolve(proxyImagesList[source])\n            }\n        })\n    }\n\n    // Return the following step\n    function _nextStep () {\n        return currentStep < settings.steps ? currentStep + 1 : 1\n    }\n\n    // Return the previous step\n    function _prevStep () {\n        return currentStep > 1 ? currentStep - 1 : settings.steps\n    }\n\n    // Replace the current step by it's HD replacement, only if it exists\n    function _proxy (step) {\n        // Check if the proxy frame has been set by the user\n        if (typeof settings.proxy[step] === 'undefined') {\n            return\n        }\n\n        // If the proxy dom element doesn't exist, we create it !\n        if (proxyNode === null) {\n            proxyNode = document.createElement('div')\n            htmlNode\n                .appendChild(proxyNode)\n                .setAttribute('id', 'spritz-proxy-' + uniqid + '')\n        }\n\n        // If the proxy dom element, we can load the proxy image\n        if (proxyNode !== null) {\n            let proxySrc = settings.proxy[step]\n            _loadProxyImage(proxySrc).then(function (proxyImage) {\n                proxyNode.style.backgroundImage = 'url(\"' + proxyImage.getAttribute('src') + '\")'\n                htmlNode.classList.add('proxy-visible')\n            })\n        }\n    }\n\n\n    /**\n    * Public methods\n    */\n\n    // Initiate the instance\n    function init (initial = null) {\n        if (initial !== null) settings.initial = initial\n        _runSeries(__init).then(function () {\n            return instance.emit('init')\n        })\n    }\n\n    // Create the sprite structure\n    function build () {\n        _runSeries(__build).then(function () {\n            return instance.emit('build')\n        })\n    }\n\n    // Destroy completely the sprite and restore initial state\n    function destroy () {\n        styleNode.parentNode.removeChild(styleNode)\n        htmlNode.parentNode.removeChild(htmlNode)\n\n        imageNode = styleNode = htmlNode = svgNode = proxyNode = proxyTimeout = null\n        proxyImagesList = []\n\n        return instance.emit('destroy')\n    }\n\n    // Load the sprite image\n    function load () {\n        if (imageNode === null) {\n            imageNode = new Image()\n            imageNode.onload = function () {\n                return instance.emit('load')\n            }\n            imageNode.src = settings.src\n        }\n    }\n\n    // Return true if SVG Masking is supported\n    function isMaskingSupported () {\n        return _canUseSVG\n    }\n\n    // Return the current frame/step\n    function getCurrentStep () {\n        return currentStep\n    }\n\n    // Change the current frame/step (no animation)\n    function changeStep (step = 1) {\n        if (styleNode != null && htmlNode != null && imageNode != null) {\n            // If next step\n            if (step === 'next') {\n                step = _nextStep()\n            }\n\n            // If prev step\n            if (step === 'prev') {\n                step = _prevStep()\n            }\n\n            // Hide the proxy\n            htmlNode.classList.remove('proxy-visible')\n\n            // Step & rows values, starting from 0\n            let stepZero = step - 1\n            let rowsZero = settings.rows - 1\n            let columnsZero = sprite.columns - 1\n\n            // Calculate the new position\n            let positionX = (100 / columnsZero) * (stepZero % sprite.columns)\n            let positionY = (100 / rowsZero) * Math.floor(stepZero / sprite.columns)\n\n            // Set the new sprite position\n            if (svgNode !== null) {\n                positionX = (positionX * columnsZero / 100) * sprite.width\n                positionY = (positionY * rowsZero / 100) * sprite.height\n                svgNode.setAttribute('viewBox', '' + positionX + ' ' + positionY + ' ' + sprite.width + ' ' + sprite.height + ' ')\n            } else {\n                htmlNode.style.backgroundPosition = '' + positionX + '% ' + positionY + '%'\n            }\n\n            // Save current step\n            currentStep = step\n\n            // Fire proxy replacement after a certain time on a frame\n            clearTimeout(proxyTimeout)\n            proxyTimeout = setTimeout(function () {\n                _proxy(step)\n            }, 500)\n\n            // Emit changed\n            return instance.emit('change')\n        }\n    }\n\n    // Set a progress value: 0 = first step / 1 = last step\n    function changeProgress (progressValue) {\n        let stepEquiv = Math.round(progressValue * 100 * settings.steps / 100)\n        if (stepEquiv === 0) stepEquiv++\n        return changeStep(stepEquiv)\n    }\n\n    // Update current frame/step (animated)\n    function animateStep (step, fps = 12, easing = 'ease') {\n        // TODO\n    }\n}\n"],"sourceRoot":"/source/"}